[gd_scene load_steps=10 format=3 uid="uid://cotey5fh7wk78"]

[ext_resource type="Texture2D" uid="uid://dljpj2aeprbh2" path="res://assets/splash-black.png" id="1_votbn"]
[ext_resource type="Texture2D" uid="uid://cgaleti8kgur8" path="res://assets/splash-aiva.png" id="2_an2ev"]
[ext_resource type="Texture2D" uid="uid://bnechw11pr8r4" path="res://assets/splash-kb.png" id="3_osef6"]
[ext_resource type="Texture2D" uid="uid://cpaw2cbvjlod6" path="res://assets/splash-contr.png" id="4_a4f6s"]
[ext_resource type="Texture2D" uid="uid://r670ynxe6ijn" path="res://assets/splash-divider.png" id="5_tsqs4"]

[sub_resource type="CSharpScript" id="CSharpScript_sogr0"]
script/source = "using Godot;
using System;

public partial class SplashScreen : Node
{
    [Export] AnimationPlayer animationPlayer;


    public override void _Process(double delta)
    {
        if (!animationPlayer.IsPlaying())
        {
            GetTree().ChangeSceneToFile(\"res://scenes/main.tscn\");
        }
    }
}
"

[sub_resource type="Animation" id="Animation_jqcea"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("divider:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 180)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("kb:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(95, 170)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("cont:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(-80, 190)]
}

[sub_resource type="Animation" id="Animation_or10y"]
resource_name = "default"
length = 7.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("aiva:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 2, 3.4, 4.5),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("divider:position")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 2, 2.7, 3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 360), Vector2(0, 360), Vector2(0, 155), Vector2(0, 180)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("kb:position")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 2, 3, 3.4),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [Vector2(580, 170), Vector2(580, 170), Vector2(95, 170), Vector2(110, 170)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("cont:position")
tracks/3/interp = 2
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 2, 3, 3.4),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [Vector2(-565, 180), Vector2(-565, 180), Vector2(-80, 180), Vector2(-95, 180)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("kb:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(4.4, 5.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("cont:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(4.4, 5.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("divider:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(4.4, 5.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/7/type = "method"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath(".")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(),
"transitions": PackedFloat32Array(),
"values": []
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("black:modulate")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 5.5, 7),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("CanvasLayer:visible")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0, 7),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("bg:modulate")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(5.5, 7),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("stork-4k:modulate")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(5.5, 7),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_buuut"]
_data = {
"RESET": SubResource("Animation_jqcea"),
"default": SubResource("Animation_or10y")
}

[node name="intro-splash" type="Node"]
script = SubResource("CSharpScript_sogr0")

[node name="Camera2D" type="Camera2D" parent="."]

[node name="black" type="TextureRect" parent="."]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -480.0
offset_top = -270.0
offset_right = -480.0
offset_bottom = -270.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("1_votbn")

[node name="aiva" type="TextureRect" parent="."]
modulate = Color(1, 1, 1, 0)
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -480.0
offset_top = -270.0
offset_right = -480.0
offset_bottom = -270.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("2_an2ev")

[node name="kb" type="Sprite2D" parent="."]
position = Vector2(95, 170)
texture = ExtResource("3_osef6")

[node name="cont" type="Sprite2D" parent="."]
position = Vector2(-80, 190)
texture = ExtResource("4_a4f6s")

[node name="divider" type="Sprite2D" parent="."]
position = Vector2(0, 180)
texture = ExtResource("5_tsqs4")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "default"
libraries = {
"": SubResource("AnimationLibrary_buuut")
}
